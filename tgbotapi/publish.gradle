apply plugin: 'maven-publish'
apply plugin: 'signing'

task javadocsJar(type: Jar) {
    classifier = 'javadoc'
}
task sourceJar (type : Jar) {
    classifier = 'sources'
}

afterEvaluate {
    project.publishing.publications.all {
        // rename artifacts
        groupId "${project.group}"
        if (it.name.contains('kotlinMultiplatform')) {
            artifactId = "${project.name}"
            artifact sourceJar
        } else {
            artifactId = "${project.name}-$name"
        }
    }
}

publishing {
    publications.all {
        artifact javadocsJar

        pom {
            description = "This project just include all subproject of TelegramBotAPI"
            name = "Telegram Bot API"
            url = "https://insanusmokrassar.github.io/TelegramBotAPI/TelegramBotAPI"

            scm {
                developerConnection = "scm:git:[fetch=]https://github.com/insanusmokrassar/TelegramBotAPI.git[push=]https://github.com/insanusmokrassar/TelegramBotAPI.git"
                url = "https://github.com/insanusmokrassar/TelegramBotAPI.git"
            }

            developers {
                
                    developer {
                        id = "InsanusMokrassar"
                        name = "Ovsiannikov Aleksei"
                        email = "ovsyannikov.alexey95@gmail.com"
                    }
                
            }

            licenses {
                
                    license {
                        name = "Apache Software License 2.0"
                        url = "https://github.com/InsanusMokrassar/TelegramBotAPI/blob/master/LICENSE"
                    }
                
            }
        }
        
        repositories {
            maven {
                name = "bintray"
                url = uri("https://api.bintray.com/maven/${project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')}/TelegramBotAPI/${project.name}/;publish=1;override=1")
                credentials {
                    username = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
                    password = project.hasProperty('BINTRAY_KEY') ? project.property('BINTRAY_KEY') : System.getenv('BINTRAY_KEY')
                }
            }
        }
        
    }
}

signing {
    useGpgCmd()
    publishing.publications.forEach { sign it }
}
